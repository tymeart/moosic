{"version":3,"sources":["components/Login.js","hidden.js","actions/index.js","actions/actionTypes.js","components/RecentlyPlayed.js","containers/Navbar.js","containers/Middle.js","containers/PrivateRoute.js","components/BrowseGenres.js","components/BrowseFeatured.js","utilities/truncate.js","utilities/listify.js","components/BrowseNewReleases.js","containers/Browse.js","containers/GenrePlaylists.js","containers/Controls.js","containers/Player.js","utilities/convertTime.js","components/SearchResults.js","containers/Search.js","containers/AlbumPage.js","containers/PlaylistPage.js","containers/Playlist.js","components/NoMatch.js","containers/App.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["Login","react_default","a","createElement","className","href","concat","Component","saveSongInfo","track","album","type","payload","RecentlyPlayed","_ref","albums","map","key","id","name","Navbar","logOutAndRedirect","_this","props","logOut","context","router","history","push","NavLink","to","activeClassName","fa","components_RecentlyPlayed","this","state","recentlyPlayed","onClick","contextTypes","PropTypes","object","withRouter","connect","dispatch","Middle","accessToken","window","location","hash","split","logIn","console","log","token","PrivateRoute","component","isLoggedIn","rest","Object","objectWithoutProperties","Route","assign","render","Redirect","BrowseGenres","categories","slice","item","genreName","alt","src","icons","url","BrowseFeatured","playlists","playlist","ownerId","ownerName","playlistName","thumbnail","images","md","truncate","string","length","newStr","substring","listify","array","list","i","BrowseNewReleases","newReleases","title","artists","Browse","genres","fetch","headers","Authorization","then","res","json","data","saveGenres","items","featuredPlaylists","saveFeaturedPlaylists","saveNewReleases","match","pathname","Switch","containers_PrivateRoute","path","newreleases","GenrePlaylists","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_this2","params","setState","catch","err","_this3","owner","display_name","Controls","togglePlayPause","isPlaying","playerCurrentTimeDisplay","style","width","playerProgressBarWidth","playerDurationDisplay","Player","currentlyPlayingSrc","playPromise","audioEl","current","play","undefined","_","isNaN","duration","updateSongDuration","formatTime","pause","togglePlayStatus","e","React","createRef","addEventListener","currentTimeToDisplay","currentTime","progressRatio","updateSongProgress","startSync","endStartSync","sec","minutes","Math","trunc","seconds","_this$props$state","currentlyPlayingTrack","currentlyPlayingAlbum","artistsList","containers_Controls","ref","currentTimeDisplay","progressBarWidth","durationDisplay","convertTime","ms","SearchResults","results","firstFiveTracks","tracks","currentPlaylist","preview_url","handleTrackClick","duration_ms","filter","artist","height","Search","handleInput","input","target","value","sendQuery","preventDefault","query","replaceSpaces","str","arr","splice","join","onSubmit","htmlFor","placeholder","onChange","components_SearchResults","AlbumPage","updateRecentlyPlayed","tracklist","currentAlbum","react","releaseDate","PlaylistPage","image","Playlist","saveAlbum","album_type","release_date","savePlaylist","containers_PlaylistPage","containers_AlbumPage","newAlbum","NoMatch","App","BrowserRouter","basename","process","containers_Navbar","exact","containers_Player","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","initialState","userReducer","arguments","action","objectSpread","newRecentlyPlayed","toConsumableArray","albumPosition","indexOf","unshift","pop","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","ReactDOM","es","containers_App","document","getElementById","URL","origin","response","status","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.69d92e95.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { CLIENT_ID, REDIRECT_URI } from '../hidden';\nimport '../styles/Login.css';\n\nclass Login extends Component {\n  render() {\n    return (\n      <div className=\"Login center\">\n        <h1>Welcome to Moosic</h1>\n        <p>To continue, please log in to Spotify</p>\n        <a href={`https://accounts.spotify.com/authorize/?client_id=${CLIENT_ID}&response_type=token&redirect_uri=${REDIRECT_URI}`}>\n          Log In\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","const CLIENT_ID = '2d9beb2f5b9447cbb788d9ac8324eb8f';\nconst CLIENT_SECRET = 'c2a2026bbf124f26954787a41e2b9ee2';\nconst REDIRECT_URI = process.env.NODE_ENV === 'development' ? \n  'http://localhost:3000/middle':\n  'https://tymeart.github.io/moosic/middle';\n\nexport { CLIENT_ID, CLIENT_SECRET, REDIRECT_URI };\n","import * as types from './actionTypes';\n\nexport const logIn = (accessToken) => {\n  return {\n    type: types.LOG_IN,\n    token: accessToken\n  };\n};\n\nexport const logOut = () => {\n  return {\n    type: types.LOG_OUT\n  };\n};\n\nexport const saveGenres = (genres) => {\n  return {\n    type: types.SAVE_GENRES,\n    payload: genres\n  };\n};\n\nexport const saveFeaturedPlaylists = (playlists) => {\n  return {\n    type: types.SAVE_FEATURED_PLAYLISTS,\n    payload: playlists\n  };\n};\n\nexport const saveNewReleases = (newreleases) => {\n  return {\n    type: types.SAVE_NEW_RELEASES,\n    payload: newreleases\n  };\n};\n\nexport const saveAlbum = (album) => {\n  return {\n    type: types.SAVE_ALBUM,\n    payload: album\n  };\n};\n\nexport const savePlaylist = (playlist) => {\n  return {\n    type: types.SAVE_PLAYLIST,\n    payload: playlist\n  };\n};\n\nexport const saveSongInfo = (track, album) => {\n  return {\n    type: types.SAVE_SONG_INFO,\n    payload: {\n      track: track,\n      album: album\n    }\n  };\n}\n\nexport const togglePlayStatus = () => {\n  return {\n    type: types.TOGGLE_PLAY_STATUS\n  };\n}\n\nexport const startSync = () => {\n  return {\n    type: types.START_SYNC\n  };\n}\n\nexport const endStartSync = () => {\n  return {\n    type: types.END_START_SYNC\n  };\n}\n\nexport const updateSongProgress = (currentTimeDisplay, progressBarWidth) => {\n  return {\n    type: types.UPDATE_SONG_PROGRESS,\n    payload: {\n      currentTimeDisplay: currentTimeDisplay,\n      progressBarWidth: progressBarWidth\n    }\n  };\n}\n\nexport const updateSongDuration = (durationDisplay) => {\n  return {\n    type: types.UPDATE_SONG_DURATION,\n    payload: {\n      durationDisplay: durationDisplay\n    }\n  };\n}\n\nexport const updateRecentlyPlayed = (album) => {\n  return {\n    type: types.UPDATE_RECENTLY_PLAYED,\n    payload: {\n      newAlbum: album\n    }\n  };\n}","export const LOG_IN = 'LOG_IN';\nexport const LOG_OUT = 'LOG_OUT';\nexport const SAVE_GENRES = 'SAVE_GENRES';\nexport const SAVE_FEATURED_PLAYLISTS = 'SAVE_FEATURED_PLAYLISTS';\nexport const SAVE_NEW_RELEASES = 'SAVE_NEW_RELEASES';\nexport const SAVE_SONG_INFO = 'SAVE_SONG_INFO';\nexport const SAVE_ALBUM = 'SAVE_ALBUM';\nexport const SAVE_PLAYLIST = 'SAVE_PLAYLIST';\nexport const TOGGLE_PLAY_STATUS = 'TOGGLE_PLAY_STATUS';\nexport const START_SYNC = 'START_SYNC';\nexport const END_START_SYNC = 'END_START_SYNC';\nexport const UPDATE_SONG_PROGRESS = 'UPDATE_SONG_PROGRESS';\nexport const UPDATE_SONG_DURATION = 'UPDATE_SONG_DURATION';\nexport const UPDATE_RECENTLY_PLAYED = 'UPDATE RECENTLY PLAYED';\n","import React from 'react';\n\nconst RecentlyPlayed = ({albums}) => {\n  return (\n    albums.map(album => {\n      return (\n        <li key={album.id}>\n          <div className=\"album-name truncate\">{ album.name }</div>\n          <div className=\"album-type\">{ album.type }</div>\n        </li>\n      );\n    })\n  );\n}\n\nexport default RecentlyPlayed;","import React, { Component } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { logOut } from '../actions/index';\nimport { FaSearch, FaHome, FaMusic } from 'react-icons/lib/fa';\nimport '../styles/Navbar.css';\nimport RecentlyPlayed from '../components/RecentlyPlayed';\n\nclass Navbar extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n  logOutAndRedirect = () => {\n    this.props.logOut();\n    this.context.router.history.push('/login');\n  }\n\n  render() {  \n    return (\n      <nav className=\"Navbar\">\n        <div className=\"navbar-main\">\n          <h1 className=\"App-title\">moosic</h1>\n          <NavLink to=\"/search\" activeClassName=\"selected\"><FaSearch />Search</NavLink>\n          <NavLink to=\"/browse\" activeClassName=\"selected\"><FaHome />Home</NavLink>\n          <NavLink to=\"/collection\" activeClassName=\"selected\"><FaMusic />Your Music</NavLink>\n          <h2>Recently Played</h2>\n          <ul>\n            <RecentlyPlayed albums={this.props.state.recentlyPlayed} />\n          </ul>\n        </div>\n\n        <button className=\"logout\" onClick={this.logOutAndRedirect}>Log Out</button>\n      </nav>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logOut: () => {\n      dispatch(logOut())\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Navbar));\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logIn } from '../actions/index';\n\nclass Middle extends Component {\n  static contextTypes = {\n    router: PropTypes.object\n  }\n\n  componentDidMount() {\n    let accessToken = '';\n    if (window.location.hash) {\n      const url = window.location.hash;\n      accessToken = url.split('&')[0].split('=')[1];\n\n      this.props.logIn(accessToken);\n      this.context.router.history.push('/');\n    } else {\n      console.log('ACCESS DENIED');\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        The intermediary component!\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    logIn: (accessToken) => {\n      dispatch(logIn(accessToken))\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Middle);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, isLoggedIn, ...rest}) => {\n  return (\n    <Route {...rest} render={props =>\n      isLoggedIn === true ?\n        <Component {...props} {...rest} /> :\n        <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst BrowseGenres = withRouter(({ categories, history }) => {\n    console.log(categories)\n    return (\n        <div>\n            <h2>Genres & Moods</h2>\n            <ul className=\"tilelist\">\n                {categories.slice(1).map(item => {\n                    return (\n                        <li\n                            className=\"tile\"\n                            key={item.id}\n                        >\n                            <div \n                                className=\"thumbnail\"\n                                onClick={ () => {history.push(`/view/${item.id}`, {genreName: item.name})} }\n                            >\n                                <img\n                                    alt={`Thumbnail for ${item.name} category`}\n                                    src={`${item.icons[0].url}`}\n                                />\n                                <div className=\"overlay\"></div>\n                            </div>\n                            <div className=\"title\">{item.name}</div>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n});\n\nexport default BrowseGenres;","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { MdPlayCircleOutline } from 'react-icons/lib/md';\n\nconst BrowseFeatured = withRouter(({ playlists, history }) => {\n    console.log(playlists)\n    return (\n        <div>\n            <h2>Featured</h2>\n            <ul className=\"tilelist\">\n                {playlists.map(playlist => {\n                    return (\n                        <li\n                            className=\"tile\"\n                            key={playlist.id}\n                        >\n                            <div \n                                className=\"thumbnail\"\n                                onClick={() => { history.push(`/playlist/featured/${playlist.id}`, \n                                    {\n                                      ownerId: 'spotify',\n                                      ownerName: 'Spotify',\n                                      playlistName: playlist.name,\n                                      thumbnail: playlist.images[0].url\n                                    })\n                                }}\n                            >\n                                <img\n                                    alt={`Thumbnail for ${playlist.name} playlist`}\n                                    src={`${playlist.images[0].url}`}\n                                />\n                                <div className=\"overlay\"><MdPlayCircleOutline /></div>\n                            </div>\n                            <div className=\"title\">{playlist.name}</div>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n});\n\nexport default BrowseFeatured;","export const truncate = (string) => {\n  if (string.length > 34) {\n    let newStr = string.substring(0, 33);\n    if (newStr[newStr.length - 1] === ' ') {\n      return newStr.slice(0, 34) + '...';\n    } else {\n      return newStr + '...';\n    }\n  }\n  return string;\n}","export const listify = (array) => {\n  let list = `${array[0].name}`;\n  if (array.length > 1) {\n    for (let i = 1; i < array.length; i++) {\n      list += `, ${array[i].name}`\n    }\n  }\n  return list;\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { MdPlayCircleOutline } from 'react-icons/lib/md';\nimport { truncate } from '../utilities/truncate';\nimport { listify } from '../utilities/listify';\n\nconst BrowseNewReleases = withRouter(({ newReleases, history }) => {\n    console.log(newReleases)\n    return (\n        <div>\n            <h2>New Albums & Singles</h2>\n            <ul className=\"tilelist\">\n                {newReleases.map(album => {\n                    return (\n                        <li\n                            className=\"tile\"\n                            key={album.id}\n                        >\n                            <div \n                                className=\"thumbnail\"\n                                onClick={() => { history.push(`/playlist/newreleases/${album.id}`) }}\n                            >\n                                <img\n                                    alt={`Thumbnail for the album ${album.name}`}\n                                    src={`${album.images[1].url}`}\n                                />\n                                <div className=\"overlay\"><MdPlayCircleOutline /></div>\n                            </div>\n                            <div className=\"albumName\" title={album.name}>{truncate(album.name)}</div>\n                            <div className=\"artistName\">{truncate(listify(album.artists))}</div>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n});\n\nexport default BrowseNewReleases;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, Redirect, Switch } from 'react-router-dom';\nimport PrivateRoute from './PrivateRoute';\nimport BrowseGenres from '../components/BrowseGenres';\nimport BrowseFeatured from '../components/BrowseFeatured';\nimport BrowseNewReleases from '../components/BrowseNewReleases';\nimport { saveGenres, saveFeaturedPlaylists, saveNewReleases } from '../actions/index';\nimport '../styles/Browse.css';\n\nclass Browse extends Component {\n  componentDidMount() {\n    if (this.props.state.genres.length === 0) {\n      fetch('https://api.spotify.com/v1/browse/categories',\n      {\n        headers: {\n          'Authorization': `Bearer ${this.props.state.accessToken}`\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.props.saveGenres(data.categories.items);\n      });\n    }\n\n    if (this.props.state.featuredPlaylists.length === 0) {\n      fetch('https://api.spotify.com/v1/browse/featured-playlists',\n      {\n        headers: {\n          'Authorization': `Bearer ${this.props.state.accessToken}`\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.props.saveFeaturedPlaylists(data.playlists.items);\n      });\n    }\n\n    if (this.props.state.newReleases.length === 0) {\n      fetch('https://api.spotify.com/v1/browse/new-releases',\n      {\n        headers: {\n          'Authorization': `Bearer ${this.props.state.accessToken}`\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.props.saveNewReleases(data.albums.items);\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Browse App-main\">\n        <nav className=\"category-nav\">\n          <ul>\n            <li><NavLink to=\"/browse/featured\" activeClassName=\"selectedCategory\">Featured</NavLink></li>\n            <li><NavLink to=\"/browse/genres\" activeClassName=\"selectedCategory\">Genres & Moods</NavLink></li>\n            <li><NavLink to=\"/browse/newreleases\" activeClassName=\"selectedCategory\">New Releases</NavLink></li>\n          </ul>\n        </nav>\n\n        {this.props.match.url === this.props.location.pathname && \n          <Redirect to={'/browse/genres'} />}\n\n        <Switch>\n          <PrivateRoute\n            path=\"/browse/featured\"\n            isLoggedIn={this.props.state.isLoggedIn}\n            playlists={this.props.state.featuredPlaylists}\n            component={BrowseFeatured}\n          />\n          <PrivateRoute\n            path=\"/browse/genres\"\n            isLoggedIn={this.props.state.isLoggedIn}\n            categories={this.props.state.genres}\n            component={BrowseGenres}\n          />\n          <PrivateRoute\n            path=\"/browse/newreleases\"\n            isLoggedIn={this.props.state.isLoggedIn}\n            newReleases={this.props.state.newReleases}\n            component={BrowseNewReleases}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveGenres: (genres) => {\n      dispatch(saveGenres(genres))\n    },\n    saveFeaturedPlaylists: (playlists) => {\n      dispatch(saveFeaturedPlaylists(playlists))\n    },\n    saveNewReleases: (newreleases) => {\n      dispatch(saveNewReleases(newreleases))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Browse);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { MdPlayCircleOutline } from 'react-icons/lib/md';\nimport '../styles/Browse.css';\n\nclass GenrePlaylists extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlists: []\n    };\n  }  \n\n  componentDidMount() {\n    fetch(`https://api.spotify.com/v1/browse/categories/${this.props.match.params.id}/playlists`,\n      {\n        headers: {\n          'Authorization': `Bearer ${this.props.state.accessToken}`\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data.playlists.items)\n        this.setState({playlists: data.playlists.items});\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className=\"Browse App-main\">\n        <h2>{this.props.location.state.genreName}</h2>\n        <ul className=\"tilelist\">\n          {this.state.playlists.map(playlist => {\n            return (\n              <li\n                className=\"tile\"\n                key={playlist.id}\n              >\n                <div\n                  className=\"thumbnail\"\n                  onClick={() => { this.props.history.push(`/playlist/genres/${playlist.id}`, \n                    // pass playlist info to playlist component\n                    {\n                     ownerId: playlist.owner.id,\n                     ownerName: playlist.owner.display_name,\n                     playlistName: playlist.name,\n                     thumbnail: playlist.images[0].url\n                    }) \n                  }}\n                >\n                  <img\n                    alt={`Thumbnail for ${playlist.name} playlist`}\n                    src={`${playlist.images[0].url}`}\n                  />\n                  <div className=\"overlay\"><MdPlayCircleOutline /></div>\n                </div>\n                <div className=\"title\">{playlist.name}</div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  }\n};\n\nexport default withRouter(connect(mapStateToProps)(GenrePlaylists));","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FaStepBackward, FaStepForward } from 'react-icons/lib/fa';\nimport { MdPlayCircleOutline, MdPauseCircleOutline } from 'react-icons/lib/md';\nimport '../styles/Controls.css';\n\nclass Controls extends Component {\n  render() {\n    return (\n      <div className=\"Controls\">\n        <div className=\"Controls-buttons\">\n          <button><FaStepBackward title=\"Previous\" /></button>\n          <button className=\"play-pause\" onClick={this.props.togglePlayPause}>\n            {this.props.state.isPlaying ? <MdPauseCircleOutline title=\"Pause\" /> : <MdPlayCircleOutline title=\"Play\" />}\n          </button>\n          <button><FaStepForward title=\"Next\" /></button>\n        </div>\n\n        <div className=\"Controls-progress\">\n          <p className=\"progress-time\">{this.props.state.playerCurrentTimeDisplay}</p>\n          <div className=\"progress-bar\">\n            <div\n              className=\"progress-bar-completed\"\n              style={{\n                width: this.props.state.playerProgressBarWidth\n              }}\n            >\n            </div>\n          </div>\n          <p className=\"progress-time-total\">{this.props.state.playerDurationDisplay}</p>\n        </div>\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n}\n\nexport default connect(mapStateToProps)(Controls);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Controls from './Controls';\nimport { endStartSync, togglePlayStatus, updateSongProgress, updateSongDuration } from '../actions/index';\nimport '../styles/Player.css';\nimport { listify } from '../utilities/listify';\n\nclass Player extends Component {\n  constructor(props) {\n    super(props);\n\n    this.audioEl = React.createRef();\n  }\n\n  componentDidMount() {\n    this.audioEl.current.addEventListener('timeupdate', () => {\n      let currentTimeToDisplay = this.formatTime(this.audioEl.current.currentTime);\n      let progressRatio = this.audioEl.current.currentTime / this.audioEl.current.duration;\n      this.props.updateSongProgress(currentTimeToDisplay, `${progressRatio * 400}px`);\n    });\n  }\n\n  componentDidUpdate() {\n    // track was clicked on\n    if (this.props.state.startSync) {\n      if (this.props.state.currentlyPlayingSrc === null) {\n        this.props.endStartSync();\n      } else {\n        // start playing\n        this.togglePlayPause();\n        // toggle off so they don't interupt playback\n        this.props.togglePlayStatus();\n        this.props.endStartSync();\n      }\n    }\n  }\n\n  togglePlayPause = () => {\n    if (this.props.state.currentlyPlayingSrc !== null) {\n      let playPromise = this.audioEl.current.play();\n      if (playPromise !== undefined) {\n        playPromise.then(_ => {\n          if (!isNaN(this.audioEl.current.duration)) {\n            this.props.updateSongDuration(this.formatTime(this.audioEl.current.duration));\n          }\n          if (this.props.state.isPlaying) {\n            this.audioEl.current.pause();\n            this.props.togglePlayStatus();\n          } else {\n            this.audioEl.current.play();\n            this.props.togglePlayStatus();\n          }\n          })\n        .catch(e => console.log(e));\n      }\n    }\n  }\n\n  formatTime(sec) {\n    let minutes = `${Math.trunc(sec / 60)}`;\n    let seconds = sec < 10 ?\n      `0${Math.trunc(sec % 60)}` :\n      `${Math.trunc(sec % 60)}`;\n    return `${minutes}:${seconds}`;\n  }\n\n  render() {\n    const { currentlyPlayingTrack, currentlyPlayingAlbum } = this.props.state;\n\n    let artistsList = currentlyPlayingTrack ? listify(currentlyPlayingTrack.artists) : '';\n\n    return (\n      <div className=\"player\">\n        <div className=\"currently-playing-container\">\n          {currentlyPlayingAlbum &&\n            <span>\n              <img\n                src={currentlyPlayingAlbum.images[0]}\n                alt={`Cover art for ${currentlyPlayingAlbum.name}`}\n              />\n              <div className=\"currently-playing-info\">\n                <p className=\"currently-playing-title truncate\">{currentlyPlayingTrack.name}</p>\n                <p className=\"currently-playing-artist truncate\">{artistsList}</p>\n              </div>\n            </span>\n          }\n        </div>\n        <Controls\n          togglePlayPause={this.togglePlayPause}\n        />\n        <audio\n          ref={this.audioEl}\n          src={this.props.state.currentlyPlayingSrc}\n        >\n          Your browser does not support the <code>audio</code> element.\n        </audio>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    endStartSync: () => {\n      dispatch(endStartSync())\n    },\n    togglePlayStatus: () => {\n      dispatch(togglePlayStatus())\n    },\n    updateSongProgress: (currentTimeDisplay, progressBarWidth) => {\n      dispatch(updateSongProgress(currentTimeDisplay, progressBarWidth))\n    },\n    updateSongDuration: (durationDisplay) => {\n      dispatch(updateSongDuration(durationDisplay))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\n","export const convertTime = (ms) => {\n  let sec = ms / 1000;\n  let minutes = `${Math.trunc(sec / 60)}`;\n  let seconds = (sec % 60) < 10 ?\n    `0${Math.trunc(sec % 60)}` :\n    `${Math.trunc(sec % 60)}`;\n  return `${minutes}:${seconds}`;\n}","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { FaMusic, FaPlay } from 'react-icons/lib/fa';\nimport { MdPlayCircleOutline } from 'react-icons/lib/md';\nimport { convertTime } from '../utilities/convertTime';\nimport { listify } from '../utilities/listify';\nimport { truncate } from '../utilities/truncate';\n\nconst SearchResults = withRouter(({ results, isPlaying, saveSongInfo, startSync, togglePlayStatus, history }) => {\n  console.log(results)\n\n  console.log(results.artists.items)\n\n  const handleTrackClick = (track, currentPlaylist) => {\n    saveSongInfo(track, currentPlaylist);\n    if (track.preview_url !== null) {\n      startSync();\n      if (isPlaying === false) {\n        togglePlayStatus();\n      }\n    }\n  }\n\n  const firstFiveTracks = results.tracks.items.slice(0, 5).map(track => {\n      return (\n        <li \n          className=\"top-result-track\"\n          key={track.id}\n          onClick={() => handleTrackClick(track, { images: [track.album.images[0].url], name: track.name })}  \n        >\n          <div className=\"top-results__tracks-left\">\n            <div className=\"top-results__tracks--playStatus\">\n              <FaMusic className=\"music-note\" />\n              <FaPlay className=\"play-icon\" />\n            </div>\n            <div className=\"truncate\">\n              <div className=\"top-results__tracks--name truncate\">{track.name}</div>\n              <div className=\"top-results__tracks--artist-info truncate\">\n                <div className=\"top-results__tracks--artist\">{listify(track.artists)}</div>\n                <span>&middot;</span>\n                <div className=\"top-results__tracks--album\">{track.album.name}</div>\n              </div>\n            </div>\n          </div>\n          <div className=\"top-results__tracks--duration\">{convertTime(track.duration_ms)}</div>\n        </li>\n      );\n    }\n  );\n\n  return (\n    <div className=\"SearchResults\">\n      <h2>Top Results</h2>\n      <div className=\"top-results\">\n        <div className=\"top-results__playlist\">\n          <div \n            className=\"thumbnail large\"\n            onClick={() => {\n              history.push(`/playlist/featured/${results.playlists.items[0].id}`,\n                {\n                  ownerId: results.playlists.items[0].owner.id,\n                  ownerName: results.playlists.items[0].owner.display_name,\n                  playlistName: results.playlists.items[0].name,\n                  thumbnail: results.playlists.items[0].images[0].url\n                })\n            }}  \n          >\n            <img \n              src={`${results.playlists.items[0].images[0].url}`} \n              alt={`Thumbnail for ${results.playlists.items[0].name} playlist`}\n            />\n            <div className=\"overlay\"><MdPlayCircleOutline /></div>\n          </div>\n          <div className=\"top-results__playlist-details\">\n            <div \n              className=\"top-results__playlist-details--name\"\n              onClick={() => {\n                history.push(`/playlist/featured/${results.playlists.items[0].id}`,\n                  {\n                    ownerId: results.playlists.items[0].owner.id,\n                    ownerName: results.playlists.items[0].owner.display_name,\n                    playlistName: results.playlists.items[0].name,\n                    thumbnail: results.playlists.items[0].images[0].url\n                  })\n              }}\n            >\n              {results.playlists.items[0].name}\n            </div>\n            <div className=\"top-results__playlist-details--owner\">{results.playlists.items[0].owner.display_name}</div>\n          </div>\n        </div>\n\n        <div className=\"top-results__tracks\">\n          <ul>\n            {firstFiveTracks}\n          </ul>\n        </div>\n      </div>\n\n      <h2>Artists</h2>\n      <div className=\"artist-results\">\n        <ul className=\"tilelist\">\n          {results.artists.items.filter(artist => {\n            return (\n              (artist.images.length !== 0) && \n              (artist.images[0].height === artist.images[0].width)\n            );\n          })\n            .slice(0, 12)\n            .map(artist => {\n              return (\n                <li\n                  className=\"tile\"\n                  key={artist.id}\n                >\n                  <div className=\"thumbnail circle\">\n                    <img\n                      className=\"artist thumbnail\"\n                      alt={`Thumbnail for artist ${artist.name}`}\n                      src={`${artist.images[0].url}`}\n                    />\n                    <div className=\"overlay\"></div>\n                  </div>\n                  <div className=\"artist-results__artist\">{artist.name}</div>\n                </li>\n              );\n            })}\n        </ul>\n      </div>\n\n      <h2>Albums</h2>\n      <div className=\"albums-results\">\n        <ul className=\"tilelist\">\n          {results.albums.items.filter(album => {\n            return (\n              (album.images.length !== 0) && \n              (album.images[0].height === album.images[0].width)\n            );\n          })\n            .slice(0, 12)\n            .map(album => {\n            return (\n              <li\n                className=\"tile\"\n                key={album.id}\n              >\n                <div\n                  className=\"thumbnail\"\n                  onClick={() => { history.push(`/playlist/newreleases/${album.id}`) }}\n                >\n                  <img\n                    alt={`Thumbnail for album ${album.name}`}\n                    src={`${album.images[0].url}`}\n                  />\n                  <div className=\"overlay\"><MdPlayCircleOutline /></div>\n                </div>\n                <div \n                  className=\"albums-results__album\"\n                  onClick={() => { history.push(`/playlist/newreleases/${album.id}`) }}\n                >\n                  {truncate(album.name)}\n                </div>\n                <div className=\"albums-results__artist\">{truncate(listify(album.artists))}</div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <h2>Playlists</h2>\n      <div className=\"playlists-results\">\n        <ul className=\"tilelist\">\n          {results.playlists.items.filter(playlist => {\n            return (\n              (playlist.images.length !== 0) &&\n              (playlist.images[0].height === playlist.images[0].width) && \n              (playlist.owner.display_name !== null)\n            );\n          })\n            .slice(0, 12)\n            .map(playlist => {\n            return (\n              <li\n                className=\"tile\"\n                key={playlist.id}\n              >\n                <div\n                  className=\"thumbnail\"\n                  onClick={() => {\n                    history.push(`/playlist/featured/${playlist.id}`,\n                      {\n                        ownerId: playlist.owner.id,\n                        ownerName: playlist.owner.display_name,\n                        playlistName: playlist.name,\n                        thumbnail: playlist.images[0].url\n                      })\n                  }}\n                >\n                  <img\n                    alt={`Thumbnail for playlist ${playlist.name}`}\n                    src={`${playlist.images[0].url}`}\n                  />\n                  <div className=\"overlay\"><MdPlayCircleOutline /></div>\n                </div>\n                <div \n                  className=\"playlists-results__playlist\"\n                  onClick={() => {\n                    history.push(`/playlist/featured/${playlist.id}`,\n                      {\n                        ownerId: playlist.owner.id,\n                        ownerName: playlist.owner.display_name,\n                        playlistName: playlist.name,\n                        thumbnail: playlist.images[0].url\n                      })\n                  }}\n                >\n                  {truncate(playlist.name)}\n                </div>\n                <div className=\"playlists-results__owner\">{playlist.owner.display_name}</div>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nexport default SearchResults;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveSongInfo, startSync, togglePlayStatus } from '../actions/index';\nimport SearchResults from '../components/SearchResults';\nimport '../styles/Search.css';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      input: '',\n      results: null\n    }\n  }\n\n  handleInput = (e) => {\n    this.setState({input: e.target.value});\n  }\n\n  replaceSpaces(str) {\n    let arr = str.split('');\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] === ' ') {\n        arr.splice(i, 1, '%20');\n      }\n    }\n    return arr.join('');\n  }\n\n  sendQuery = (e) => {\n    e.preventDefault();\n    const query = this.replaceSpaces(this.state.input);\n    fetch(`https://api.spotify.com/v1/search?q=${query}&type=album,artist,playlist,track`,\n      {\n        headers: {\n          'Authorization': `Bearer ${this.props.accessToken}`\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n        this.setState({results: data})\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"Search\">\n        <form className=\"searchbar\" onSubmit={this.sendQuery}>\n          <label htmlFor=\"search\">Search for an Artist, Song, Album, or Playlist</label>\n          <input id=\"search\" placeholder=\"Start typing...\" type=\"text\" onChange={this.handleInput}/>\n        </form>\n        \n        <div className=\"results-container\">\n          {this.state.results !== null && \n            <SearchResults \n              results={this.state.results} \n              isPlaying={this.props.isPlaying}\n              saveSongInfo={this.props.saveSongInfo}\n              startSync={this.props.startSync}\n              togglePlayStatus={this.props.togglePlayStatus}\n            />\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    accessToken: state.accessToken,\n    isPlaying: state.isPlaying\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    startSync: () => {\n      dispatch(startSync())\n    },\n    saveSongInfo: (track, album) => {\n      dispatch(saveSongInfo(track, album))\n    },\n    togglePlayStatus: () => {\n      dispatch(togglePlayStatus())\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\n","import React, { Fragment } from 'react';\nimport { FaMusic, FaPlay } from 'react-icons/lib/fa';\nimport { convertTime } from '../utilities/convertTime';\nimport { listify } from '../utilities/listify';\n\nconst AlbumPage = ({ album, isPlaying, saveSongInfo, startSync, togglePlayStatus, updateRecentlyPlayed }) => {\n  const handleTrackClick = (track, currentAlbum) => {\n    saveSongInfo(track, currentAlbum);\n    if (track.preview_url !== null && isPlaying === false) {\n      togglePlayStatus();\n      startSync();\n    }\n\n    updateRecentlyPlayed(currentAlbum);\n  }\n\n  let tracks = album.tracklist.map(track => {\n    return (\n      <li\n        className=\"playlist-track\"\n        key={track.id}\n        onClick={() => \n          handleTrackClick(\n            track, \n            {\n              id: album.id,\n              images: [album.images[2].url], \n              name: album.name,\n              type: album.type\n            }\n          )}\n      >\n        <div className=\"playlist-track-left\">\n          <div className=\"playlist-track--playStatus\">\n            <FaMusic className=\"music-note\" />\n            <FaPlay className=\"play-icon\" />\n          </div>\n          <div className=\"truncate\">\n            <div className=\"playlist-track--title truncate\">{track.name}</div>\n            <div className=\"playlist-track--artist-info truncate\">\n              {track.artists.length > 1 && <div className=\"playlist-track--additionalArtists\">{listify(track.artists.slice(1))}</div> }\n            </div>\n          </div>\n        </div>\n        <div className=\"playlist-track--duration\">{convertTime(track.duration_ms)}</div>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"album-wrapper\">\n      <div className=\"album-details\">\n        <Fragment>\n          <img src={`${album.images[0].url}`} alt={`Thumbnail for ${album.name}`} />\n          <div className=\"album-details--title\">{album.name}</div>\n          <div className=\"album-details--artist\">{album.artists[0].name}</div>\n          <div className=\"album-details--other\">{album.releaseDate.slice(0, 4)} &middot; {album.tracklist.length} {album.tracklist.length === 1 ? 'song' : 'songs'}</div>\n        </Fragment>\n      </div>\n\n      <div className=\"Playlist\">\n        <ul>\n          {tracks}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default AlbumPage;","import React, { Fragment } from 'react';\nimport { FaMusic, FaPlay } from 'react-icons/lib/fa';\nimport { convertTime } from '../utilities/convertTime';\nimport { listify } from '../utilities/listify';\n\nconst PlaylistPage = ({ playlist, isPlaying, saveSongInfo, startSync, togglePlayStatus, updateRecentlyPlayed }) => {\n  const handleTrackClick = (track, currentPlaylist) => {\n    saveSongInfo(track, currentPlaylist);\n    if (track.preview_url !== null) {\n      startSync();\n      if (isPlaying === false) {\n        togglePlayStatus();\n      }\n    }\n\n    updateRecentlyPlayed(currentPlaylist);\n  }\n\n  let tracks = playlist.tracklist.map(track => {\n    return (\n      <li\n        className=\"playlist-track\"\n        key={track.track.id}\n        onClick={() => \n          handleTrackClick(\n            track.track, \n            {\n              id: playlist.id,\n              images: [playlist.image], \n              name: playlist.name,\n              type: playlist.type\n            }\n          )}\n      >\n        <div className=\"playlist-track-left\">\n          <div className=\"playlist-track--playStatus\">\n            <FaMusic className=\"music-note\" />\n            <FaPlay className=\"play-icon\" />\n          </div>\n          <div className=\"truncate\">\n            <div className=\"playlist-track--title truncate\">{track.track.name}</div>\n            <div className=\"playlist-track--artist-info truncate\">\n              {track.track.artists[0].name && <div className=\"playlist-track--artist\">{track.track.artists[0].name} </div>}\n              {track.track.artists.length > 1 && <span>&middot;</span>}\n              {track.track.artists.length > 1 && <div className=\"playlist-track--additionalArtists\">{listify(track.track.artists.slice(1))}</div>}\n            </div>\n          </div>\n        </div>\n        <div className=\"playlist-track--duration\">{convertTime(track.track.duration_ms)}</div>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"playlist-wrapper\">\n      <div className=\"playlist-details\">\n        <Fragment>\n          <img src={playlist.image} alt={`Thumbnail for ${playlist.name}`} />\n          <div className=\"playlist-details--title\">{playlist.name}</div>\n          <div className=\"playlist-details--owner\">{playlist.owner}</div>\n          <div className=\"playlist-details--other\">{playlist.tracklist.length} {playlist.tracklist.length === 1 ? 'song' : 'songs'}</div>\n        </Fragment>\n      </div>\n\n      <div className=\"Playlist\">\n        <ul>\n          {tracks}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default PlaylistPage;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { saveSongInfo, startSync, togglePlayStatus, saveAlbum, savePlaylist, updateRecentlyPlayed } from '../actions/index';\nimport AlbumPage from './AlbumPage';\nimport PlaylistPage from './PlaylistPage';\nimport '../styles/Playlist.css';\n\nlet url = '';\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n    \n    const params = this.props.match.params;\n    switch (params.type) {\n      case 'genres':\n        url = `https://api.spotify.com/v1/users/${this.props.location.state.ownerId}/playlists/${params.id}/tracks`;\n        break;\n      case 'featured':\n        url =`https://api.spotify.com/v1/users/spotify/playlists/${params.id}/tracks`;\n        break;\n      case 'newreleases':\n        url = `https://api.spotify.com/v1/albums/${params.id}`;\n        break;\n      default:\n        url = '';\n        break;\n    }\n  }\n  \n  componentDidMount() {\n    fetch(url,\n      {\n        headers: {\n          'Authorization': `Bearer ${this.props.state.accessToken}`\n        }\n      })\n      .then(res => res.json())\n      .then(data => {\n        console.log('Playlist data: ', data);\n        if (this.props.match.params.type === 'newreleases') {\n          this.props.saveAlbum({\n            artists: data.artists,\n            id: data.id,\n            name: data.name,\n            images: data.images,\n            type: data.album_type,\n            releaseDate: data.release_date,\n            tracklist: data.tracks.items\n          });\n        } else if (this.props.match.params.type === 'genres' || 'featured') {\n          this.props.savePlaylist({\n            owner: this.props.location.state.ownerName,\n            id: this.props.match.params.id,\n            name: this.props.location.state.playlistName,\n            image: this.props.location.state.thumbnail,\n            type: 'playlist',\n            tracklist: data.items\n          });\n        }\n        \n      });\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {this.props.state.playlist && \n          <PlaylistPage \n            playlist={this.props.state.playlist} \n            isPlaying={this.props.state.isPlaying}\n            saveSongInfo={this.props.saveSongInfo}\n            startSync={this.props.startSync}\n            togglePlayStatus={this.props.togglePlayStatus}\n            updateRecentlyPlayed={this.props.updateRecentlyPlayed}\n          />\n        }\n        {this.props.state.album && \n          <AlbumPage \n            album={this.props.state.album} \n            isPlaying={this.props.state.isPlaying}\n            saveSongInfo={this.props.saveSongInfo}\n            startSync={this.props.startSync}\n            togglePlayStatus={this.props.togglePlayStatus}\n            updateRecentlyPlayed={this.props.updateRecentlyPlayed}\n          /> \n        }\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    startSync: () => {\n      dispatch(startSync())\n    },\n    saveSongInfo: (track, album) => {\n      dispatch(saveSongInfo(track, album))\n    },\n    togglePlayStatus: () => {\n      dispatch(togglePlayStatus())\n    },\n    saveAlbum: album => {\n      dispatch(saveAlbum(album))\n    },\n    savePlaylist: playlist => {\n      dispatch(savePlaylist(playlist))\n    },\n    updateRecentlyPlayed: album => {\n      dispatch(updateRecentlyPlayed(album))\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Playlist);\n","import React from 'react';\nimport '../styles/NoMatch.css';\n\nconst NoMatch = () => {\n  return (\n    <div className=\"NoMatch\">\n      <p>Oops, this page hasn't been created yet!</p>\n    </div>\n  );\n}\n\nexport default NoMatch;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport '../styles/App.css';\nimport Login from '../components/Login';\nimport Navbar from './Navbar';\nimport Middle from './Middle';\nimport Browse from './Browse';\nimport GenrePlaylists from './GenrePlaylists';\nimport Player from './Player';\nimport Search from './Search';\nimport Playlist from './Playlist';\nimport NoMatch from '../components/NoMatch';\nimport PrivateRoute from './PrivateRoute';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <div className=\"App-top\">\n            {this.props.isLoggedIn && <Navbar />}\n            <Switch>\n              <PrivateRoute exact path=\"/\" isLoggedIn={this.props.isLoggedIn} component={Browse} />\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/middle\" component={Middle} />\n              <PrivateRoute path=\"/browse\" isLoggedIn={this.props.isLoggedIn} component={Browse} />\n              <PrivateRoute path=\"/view/:id\" isLoggedIn={this.props.isLoggedIn} component={GenrePlaylists} />\n              <PrivateRoute path=\"/playlist/:type/:id\" isLoggedIn={this.props.isLoggedIn} component={Playlist} />\n              <PrivateRoute path=\"/search\" isLoggedIn={this.props.isLoggedIn} component={Search} />\n              <Route component={NoMatch} />\n            </Switch>\n          </div>\n          {this.props.isLoggedIn && <Player />}\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.isLoggedIn\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as types from '../actions/actionTypes';\n\nconst initialState = {\n  accessToken: '',\n  isLoggedIn: false,\n  genres: [],\n  featuredPlaylists: [],\n  newReleases: [],\n  album: null,\n  playlist: null,\n  currentlyPlayingSrc: null,\n  currentlyPlayingTrack: null,\n  currentlyPlayingAlbum: null,\n  playerDurationDisplay: '0:00',\n  playerCurrentTimeDisplay: '0:00',\n  playerProgressBarWidth: '0px',\n  isPlaying: false,\n  startSync: false,\n  recentlyPlayed: []\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case types.LOG_IN:\n      return {\n        ...state,\n        accessToken: action.token,\n        isLoggedIn: true\n      };\n    case types.LOG_OUT:\n      return {\n        ...state,\n        accessToken: '',\n        isLoggedIn: false\n      };\n    case types.SAVE_GENRES:\n      return {\n        ...state,\n        genres: action.payload\n      };\n    case types.SAVE_FEATURED_PLAYLISTS:\n      return {\n        ...state,\n        featuredPlaylists: action.payload\n      };\n    case types.SAVE_NEW_RELEASES:\n      return {\n        ...state,\n        newReleases: action.payload\n      };\n    case types.SAVE_ALBUM:\n      return {\n        ...state,\n        album: action.payload,\n        playlist: null\n      };\n    case types.SAVE_PLAYLIST:\n      return {\n        ...state,\n        album: null,\n        playlist: action.payload\n      };\n    case types.SAVE_SONG_INFO:\n      return {\n        ...state,\n        currentlyPlayingSrc: action.payload.track.preview_url,\n        currentlyPlayingTrack: action.payload.track,\n        currentlyPlayingAlbum: action.payload.album,\n        playerProgressBarWidth: '0px'\n      };\n    case types.TOGGLE_PLAY_STATUS:\n      return {\n        ...state,\n        isPlaying: !state.isPlaying\n      };\n    case types.START_SYNC:\n      return {\n        ...state,\n        startSync: true\n      };\n    case types.END_START_SYNC:\n      return {\n        ...state,\n        startSync: false\n      };\n    case types.UPDATE_SONG_PROGRESS:\n      return {\n        ...state,\n        playerCurrentTimeDisplay: action.payload.currentTimeDisplay,\n        playerProgressBarWidth: action.payload.progressBarWidth\n      };\n    case types.UPDATE_SONG_DURATION:\n      return {\n        ...state,\n        playerDurationDisplay: action.payload.durationDisplay\n      };\n    case types.UPDATE_RECENTLY_PLAYED:\n      const newRecentlyPlayed = [...state.recentlyPlayed];\n      const albumPosition = newRecentlyPlayed\n        .map(album => album.id)\n        .indexOf(action.payload.newAlbum.id);\n\n      // album doesn't exist in the list yet\n      if (albumPosition === -1) {\n        // add to front of list\n        newRecentlyPlayed.unshift(action.payload.newAlbum);\n        // keep list 3 items long\n        if (newRecentlyPlayed.length > 3) {\n          newRecentlyPlayed.pop();\n        }\n      }\n\n      // album does exist in the list already\n      if (albumPosition > -1) {\n        newRecentlyPlayed.splice(albumPosition, 1); // remove from current position\n        newRecentlyPlayed.unshift(action.payload.newAlbum); // add to front of list\n      }\n\n      return {\n        ...state,\n        recentlyPlayed: newRecentlyPlayed\n      };\n    default:\n      return initialState;\n  }\n};\n\nexport default userReducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport userReducer from './reducers/index';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  userReducer,\n  composeEnhancers(applyMiddleware())\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}